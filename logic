import re

# Detect "3GPP" in any case (e.g., "3GPP", "3gpp", "3Gpp")
STANDARD_REGEX = re.compile(r"\b3gpp\b", re.IGNORECASE)

# Detect versions like:
# v1.0.0, V15.2.0, v2.3, v10.12, etc.
VERSION_REGEX = re.compile(r"\bv\d+(\.\d+){1,2}\b", re.IGNORECASE)

def validate_document(file_path: str) -> (bool, str): # type: ignore
    try:
        ext = os.path.splitext(file_path)[1].lower()
        if ext == ".docx":
            content = read_docx(file_path)
        elif ext == ".doc":
            content = read_doc(file_path)  # fallback for .doc
        else:
            return False, "Unsupported file format."

        # --- Regex Validation ---
        if not STANDARD_REGEX.search(content):
            return False, "File rejected: Missing '3GPP' standard reference."
        
        if not VERSION_REGEX.search(content):
            return False, "File rejected: Missing version pattern like v1.0.0."

        return True, "Document meets 3GPP validation criteria."
    except Exception as e:
        return False, f"File rejected: Could not read file. {str(e)}"
