from fastapi import APIRouter, HTTPException
from pydantic import BaseModel
from agents.utils.rag_pipeline import build_rag_chain
from utils.functions import insert_chat_history, get_chat_history

router = APIRouter()
rag_chain = build_rag_chain()

class ChatRequest(BaseModel):
    question: str

class ChatResponse(BaseModel):
    answer: str

class ChatHistoryItem(BaseModel):
    id: int
    timestamp: str
    question: str
    answer: str

@router.post("/chat/", response_model=ChatResponse)
async def chat(request: ChatRequest):
    try:
        result = rag_chain.invoke({"input": request.question})
        answer = result["answer"]
        insert_chat_history(request.question, answer)
        return ChatResponse(answer=answer)
    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))

@router.get("/chat-history/", response_model=list[ChatHistoryItem])
async def chat_history():
    rows = get_chat_history()
    return [
        ChatHistoryItem(
            id=row[0],
            timestamp=row[1],
            question=row[2],
            answer=row[3]
        )
        for row in rows
    ]
