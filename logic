from fastapi import WebSocket, WebSocketDisconnect
from watchfiles import awatch
import asyncio


@router.websocket("/ws/sharepoint")
async def websocket_sharepoint(ws: WebSocket):
    """
    WebSocket that streams updates when files in SHAREPOINT_DIR change.
    Sends the full updated file list each time.
    """
    await ws.accept()
    try:
        # Send initial file list
        await ws.send_json(_get_sharepoint_files())

        async for changes in awatch(SHAREPOINT_DIR):
            # Any change (added, modified, deleted) triggers an update
            await ws.send_json(_get_sharepoint_files())
    except WebSocketDisconnect:
        print("üîå Client disconnected from /ws/sharepoint")
    except Exception as e:
        print(f"‚ùå Error in /ws/sharepoint: {e}")


def _get_sharepoint_files(limit: int = 50):
    """
    Internal helper: list files sorted by modified time desc
    """
    try:
        files = []
        entries = sorted(
            Path(SHAREPOINT_DIR).glob("*"),
            key=lambda x: x.stat().st_mtime,
            reverse=True
        )
        for f in entries[:limit]:
            if f.is_file():
                size_kb = round(f.stat().st_size / 1024, 2)
                file_uri = f.resolve().as_uri()
                files.append({
                    "filename": f.name,
                    "size_kb": size_kb,
                    "open_url": file_uri,
                    "download_url": file_uri
                })
        return {"files": files}
    except Exception as e:
        return {"error": f"Could not list SharePoint files: {str(e)}"}
