import os
from dotenv import load_dotenv

from langchain_openai import AzureChatOpenAI
from langchain_core.prompts import ChatPromptTemplate

load_dotenv()

OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
OPENAI_API_VERSION = os.getenv("OPENAI_VERSION")
OPENAI_DEPLOYMENT = os.getenv("OPENAI_DEPLOYMENT")
OPENAI_DEPLOYMENT_ENDPOINT = os.getenv("OPENAI_BASE")

# Define intents
INTENTS = {
    "analyze_latest": "Please analyze the latest standards for me",
    "compare_versions": "Please compare versions of a standard",
    "compare_standards": "Please compare two different standards",
    "compare_standard_versions": "Please compare a standard across two versions",
    "explain_features": "Explain the features of a standard",
    "latest_standard": "Which is the latest standard/version",
}

# -------------------------------
# Build intent classifier
# -------------------------------
def build_intent_classifier():
    llm = AzureChatOpenAI(
        api_key=OPENAI_API_KEY,
        api_version=OPENAI_API_VERSION,
        azure_deployment=OPENAI_DEPLOYMENT,
        azure_endpoint=OPENAI_DEPLOYMENT_ENDPOINT,
        temperature=0
    )

    system_prompt = """You are an intent classifier.
Your task:
1. Classify the user query into one of the following intents:
- analyze_latest
- compare_versions
- compare_standards
- compare_standard_versions
- explain_features
- latest_standard

If none apply, return "none".

Only return the intent key (string)."""

    prompt = ChatPromptTemplate.from_messages([
        ("system", system_prompt),
        ("human", "{query}")
    ])

    return prompt | llm
