from test import build_intent_classifier, build_entity_extractor, get_full_docs
from agents.utils.rag_pipeline import build_rag_chain

intent_classifier = build_intent_classifier()
entity_extractor = build_entity_extractor()
rag_chain = build_rag_chain()

@router.post("/chat/", response_model=ChatResponse)
async def chat(request: ChatRequest):
    """
    Handle user chat, use intent classification,
    fallback to RAG if intent is none.
    """
    try:
        intent_response = intent_classifier.invoke({"query": request.question})
        intent = intent_response.content.strip().lower()

        if intent == "none":
            # fallback â†’ normal RAG
            result = rag_chain.invoke({"input": request.question})
            answer = result["answer"]
        else:
            # for now, just echo intent (expand later with entities + docs)
            answer = f"Intent detected: {intent}"

        insert_chat_history(request.question, answer, request.session_id)
        return ChatResponse(answer=answer)

    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))
